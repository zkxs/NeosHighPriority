name: Test, Build, and Release
on: [push, pull_request]

env:
  NeosPath: "${{ github.workspace }}/neos_install/" # set up in neos-modding-group/neos-plugin-setup-action

jobs:
  build:
    if: github.repository == 'zkxs/NeosHighPriority' # prevent forks from unintentionally running this workflow
    runs-on: ubuntu-latest
    steps:
      - name: checkout NML
        uses: actions/checkout@v3
      - name: setup build environment
        uses: neos-modding-group/neos-plugin-setup-action@master # This is where the Neos dependencies come from. Learn more at https://github.com/neos-modding-group/neos-plugin-setup-action
      - name: get NeosModLoader.dll
        uses: dsaltares/fetch-gh-release-asset@1.0.0
        with:
          repo: neos-modding-group/NeosModLoader
          file: NeosModLoader.dll
      - name: lint
        run: dotnet format --verbosity detailed --verify-no-changes ./NeosHighPriority.sln
      - name: build
        run: dotnet build ./NeosHighPriority.sln --configuration Release "-property:CopyToMods=false"
      - name: upload workflow artifacts
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master' # only publish workflow artifacts for pushes to master or tags
        uses: actions/upload-artifact@v3
        with:
          name: NeosHighPriority
          path: ./NeosHighPriority/bin/Release/net462/NeosHighPriority.dll
          if-no-files-found: error
      - name: upload release artifacts
        if: startsWith(github.ref, 'refs/tags/') # only publish release artifacts for pushes to tags
        uses: softprops/action-gh-release@v1
        with:
          draft: true # if creating a new release, make it a draft
          files: ./NeosHighPriority/bin/Release/net462/NeosHighPriority.dll
          fail_on_unmatched_files: true
